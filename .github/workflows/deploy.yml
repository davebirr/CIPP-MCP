name: Deploy CIPP-MCP to Azure

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  AZURE_FUNCTIONAPP_PACKAGE_PATH: './src'
  DOTNET_VERSION: '8.0.x'

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    
    steps:
    - name: 'Checkout GitHub Action'
      uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}

    - name: Restore dependencies
      run: dotnet restore
      working-directory: ${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}

    - name: Build
      run: dotnet build --no-restore --configuration Release
      working-directory: ${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}

    - name: Test
      run: dotnet test --no-build --configuration Release --verbosity normal
      working-directory: ${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}

    - name: Publish
      run: dotnet publish --no-build --configuration Release --output ./output
      working-directory: ${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}

    - name: Upload artifact for deployment job
      uses: actions/upload-artifact@v4
      with:
        name: .net-app
        path: ${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}/output

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-test
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    environment: production
    
    steps:
    - name: Download artifact from build job
      uses: actions/download-artifact@v4
      with:
        name: .net-app
        path: ./output

    - name: Login to Azure
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: 'Deploy to Azure Function App'
      uses: Azure/functions-action@v1
      with:
        app-name: ${{ secrets.AZURE_FUNCTIONAPP_NAME }}
        package: './output'

  security-scan:
    runs-on: ubuntu-latest
    
    steps:
    - name: 'Checkout GitHub Action'
      uses: actions/checkout@v4

    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        scan-ref: '.'
        format: 'sarif'
        output: 'trivy-results.sarif'

    - name: Upload Trivy scan results to GitHub Security tab
      uses: github/codeql-action/upload-sarif@v3
      if: always()
      with:
        sarif_file: 'trivy-results.sarif'
