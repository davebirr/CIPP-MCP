{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "metadata": {
        "description": "CIPP MCP Server deployment with OAuth2 user-delegated authentication for Copilot Studio integration"
    },
    "parameters": {
        "baseName": {
            "type": "string",
            "metadata": {
                "description": "Base name for all resources. Resources will be named {baseName}-{type}."
            }
        },
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "Location for all resources."
            }
        },
        "cippApiUrl": {
            "type": "string",
            "metadata": {
                "description": "CIPP API URL (e.g., https://yourdomain.com or https://app.cipp.org)"
            }
        },
        "existingKeyVaultName": {
            "type": "string",
            "metadata": {
                "description": "Name of existing Azure Key Vault for storing secrets"
            }
        },
        "repositoryUrl": {
            "type": "string",
            "defaultValue": "https://github.com/KelvinTegelaar/CIPP-MCP",
            "metadata": {
                "description": "GitHub repository URL for source code deployment"
            }
        },
        "repositoryBranch": {
            "type": "string",
            "defaultValue": "main",
            "metadata": {
                "description": "GitHub repository branch for deployment"
            }
        },
        "appServicePlanSku": {
            "type": "string",
            "defaultValue": "S1",
            "allowedValues": [
                "B1",
                "B2",
                "B3",
                "S1",
                "S2",
                "S3",
                "P1v2",
                "P2v2",
                "P3v2"
            ],
            "metadata": {
                "description": "App Service Plan SKU. S1 or higher recommended for production workloads."
            }
        },
        "azureAdAppDisplayName": {
            "type": "string",
            "metadata": {
                "description": "Display name for the Azure AD app registration (e.g., 'CIPP MCP OAuth2 App')"
            }
        },
        "copilotStudioRedirectUris": {
            "type": "array",
            "defaultValue": [
                "https://default.directline.botframework.com/oauth/redirect",
                "https://webchat.botframework.com/oauth/redirect"
            ],
            "metadata": {
                "description": "Redirect URIs for Copilot Studio OAuth2 integration"
            }
        },
        "tenantId": {
            "type": "string",
            "defaultValue": "[subscription().tenantId]",
            "metadata": {
                "description": "Azure AD Tenant ID for OAuth2 configuration"
            }
        }
    },
    "variables": {
        "webAppName": "[concat(parameters('baseName'), '-app')]",
        "appServicePlanName": "[concat(parameters('baseName'), '-asp')]",
        "applicationInsightsName": "[concat(parameters('baseName'), '-ai')]",
        "managedIdentityName": "[concat(parameters('baseName'), '-mi')]",
        "azureAdAppName": "[concat(parameters('baseName'), '-oauth2-app')]"
    },
    "resources": [
        {
            "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
            "apiVersion": "2018-11-30",
            "name": "[variables('managedIdentityName')]",
            "location": "[parameters('location')]"
        },
        {
            "type": "Microsoft.Insights/components",
            "apiVersion": "2020-02-02",
            "name": "[variables('applicationInsightsName')]",
            "location": "[parameters('location')]",
            "kind": "web",
            "properties": {
                "Application_Type": "web",
                "Request_Source": "rest"
            }
        },
        {
            "type": "Microsoft.Web/serverfarms",
            "apiVersion": "2021-02-01",
            "name": "[variables('appServicePlanName')]",
            "location": "[parameters('location')]",
            "sku": {
                "name": "[parameters('appServicePlanSku')]",
                "tier": "[if(startsWith(parameters('appServicePlanSku'), 'B'), 'Basic', if(startsWith(parameters('appServicePlanSku'), 'S'), 'Standard', 'PremiumV2'))]"
            },
            "properties": {
                "name": "[variables('appServicePlanName')]",
                "reserved": true
            }
        },
        {
            "type": "Microsoft.Web/sites",
            "apiVersion": "2021-02-01",
            "name": "[variables('webAppName')]",
            "location": "[parameters('location')]",
            "kind": "app,linux",
            "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]",
                "[resourceId('Microsoft.Insights/components', variables('applicationInsightsName'))]",
                "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('managedIdentityName'))]"
            ],
            "identity": {
                "type": "UserAssigned",
                "userAssignedIdentities": {
                    "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('managedIdentityName'))]": {}
                }
            },
            "properties": {
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]",
                "reserved": true,
                "siteConfig": {
                    "linuxFxVersion": "DOTNETCORE|9.0",
                    "webSocketsEnabled": true,
                    "http20Enabled": true,
                    "alwaysOn": true,
                    "cors": {
                        "allowedOrigins": [
                            "https://powerva.microsoft.com",
                            "https://copilotstudio.microsoft.com",
                            "https://bots.int.customercareintelligence.net",
                            "https://bots.customercareintelligence.net"
                        ],
                        "supportCredentials": true
                    },
                    "appSettings": [
                        {
                            "name": "APPLICATIONINSIGHTS_CONNECTION_STRING",
                            "value": "[reference(resourceId('Microsoft.Insights/components', variables('applicationInsightsName'))).ConnectionString]"
                        },
                        {
                            "name": "AZURE_CLIENT_ID",
                            "value": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('managedIdentityName'))).clientId]"
                        },
                        {
                            "name": "KEY_VAULT_NAME",
                            "value": "[parameters('existingKeyVaultName')]"
                        },
                        {
                            "name": "KEY_VAULT_URL",
                            "value": "[concat('https://', parameters('existingKeyVaultName'), '.vault.azure.net/')]"
                        },
                        {
                            "name": "CIPP_API_BASE_URL",
                            "value": "[parameters('cippApiUrl')]"
                        },
                        {
                            "name": "CIPP_SWA_URL",
                            "value": "[parameters('cippApiUrl')]"
                        },
                        {
                            "name": "AUTH_MODE",
                            "value": "oauth2"
                        },
                        {
                            "name": "USE_REAL_AUTH",
                            "value": "true"
                        },
                        {
                            "name": "OAUTH2_TENANT_ID",
                            "value": "[parameters('tenantId')]"
                        },
                        {
                            "name": "OAUTH2_CLIENT_ID",
                            "value": "@Microsoft.KeyVault(VaultName=[parameters('existingKeyVaultName')];SecretName=OAUTH2-CLIENT-ID)"
                        },
                        {
                            "name": "OAUTH2_CLIENT_SECRET",
                            "value": "@Microsoft.KeyVault(VaultName=[parameters('existingKeyVaultName')];SecretName=OAUTH2-CLIENT-SECRET)"
                        },
                        {
                            "name": "OAUTH2_REDIRECT_URI",
                            "value": "[concat('https://', variables('webAppName'), '.azurewebsites.net/oauth/callback')]"
                        },
                        {
                            "name": "OAUTH2_SCOPE",
                            "value": "openid profile email offline_access"
                        },
                        {
                            "name": "REQUEST_TIMEOUT",
                            "value": "300"
                        },
                        {
                            "name": "CIPP_CACHE_TTL",
                            "value": "300"
                        },
                        {
                            "name": "ENABLE_RESPONSE_CACHING",
                            "value": "true"
                        },
                        {
                            "name": "MAX_CONCURRENT_REQUESTS",
                            "value": "5"
                        },
                        {
                            "name": "ENABLE_USER_DELEGATION",
                            "value": "true"
                        },
                        {
                            "name": "TOKEN_VALIDATION_ENDPOINT",
                            "value": "[concat('https://login.microsoftonline.com/', parameters('tenantId'), '/oauth2/v2.0/token')]"
                        }
                    ]
                }
            }
        }
    ],
    "outputs": {
        "webAppName": {
            "type": "string",
            "value": "[variables('webAppName')]"
        },
        "webAppUrl": {
            "type": "string",
            "value": "[concat('https://', reference(resourceId('Microsoft.Web/sites', variables('webAppName'))).defaultHostName)]"
        },
        "managedIdentityName": {
            "type": "string",
            "value": "[variables('managedIdentityName')]"
        },
        "managedIdentityClientId": {
            "type": "string",
            "value": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('managedIdentityName'))).clientId]"
        },
        "oauthRedirectUri": {
            "type": "string",
            "value": "[concat('https://', reference(resourceId('Microsoft.Web/sites', variables('webAppName'))).defaultHostName, '/oauth/callback')]"
        },
        "azureAdAppConfiguration": {
            "type": "object",
            "value": {
                "displayName": "[parameters('azureAdAppDisplayName')]",
                "redirectUris": "[parameters('copilotStudioRedirectUris')]",
                "mcpServerRedirectUri": "[concat('https://', reference(resourceId('Microsoft.Web/sites', variables('webAppName'))).defaultHostName, '/oauth/callback')]",
                "requiredScopes": [
                    "openid",
                    "profile",
                    "email",
                    "offline_access"
                ]
            }
        },
        "postDeploymentSteps": {
            "type": "object",
            "value": {
                "step1": {
                    "title": "Create Azure AD App Registration",
                    "description": "Create an Azure AD app registration for OAuth2 authentication",
                    "actions": [
                        "Go to Azure Portal > Azure Active Directory > App registrations",
                        "Click 'New registration'",
                        "Name: Use the azureAdAppDisplayName parameter value",
                        "Supported account types: Accounts in this organizational directory only",
                        "Redirect URI: Add Web platform URIs from the azureAdAppConfiguration output",
                        "After creation, note the Application (client) ID"
                    ]
                },
                "step2": {
                    "title": "Configure App Registration",
                    "description": "Set up authentication and API permissions",
                    "actions": [
                        "Go to Authentication > Add platform > Web",
                        "Add all redirect URIs from azureAdAppConfiguration output",
                        "Enable 'Access tokens' and 'ID tokens'",
                        "Go to Certificates & secrets > New client secret",
                        "Copy the secret value (you won't see it again)"
                    ]
                },
                "step3": {
                    "title": "Store Secrets in Key Vault",
                    "description": "Add OAuth2 secrets to Key Vault",
                    "secrets": [
                        {
                            "name": "OAUTH2-CLIENT-ID",
                            "value": "Application (client) ID from Azure AD app registration"
                        },
                        {
                            "name": "OAUTH2-CLIENT-SECRET",
                            "value": "Client secret value from Azure AD app registration"
                        }
                    ]
                },
                "step4": {
                    "title": "Grant Key Vault Access",
                    "description": "Ensure managed identity can access Key Vault",
                    "actions": [
                        "Go to Key Vault > Access policies",
                        "Add access policy for managed identity with Get and List permissions",
                        "Managed Identity name is in managedIdentityName output"
                    ]
                },
                "step5": {
                    "title": "Configure Copilot Studio Custom Connector",
                    "description": "Set up OAuth2 authentication in Copilot Studio",
                    "actions": [
                        "In Copilot Studio, edit your custom connector",
                        "Go to Security tab",
                        "Change authentication type to 'OAuth 2.0'",
                        "Identity Provider: 'Azure Active Directory'",
                        "Client ID: Use the Application (client) ID",
                        "Client Secret: Use the client secret value",
                        "Authorization URL: https://login.microsoftonline.com/{tenantId}/oauth2/v2.0/authorize",
                        "Token URL: https://login.microsoftonline.com/{tenantId}/oauth2/v2.0/token",
                        "Refresh URL: https://login.microsoftonline.com/{tenantId}/oauth2/v2.0/token",
                        "Scope: openid profile email offline_access"
                    ]
                }
            }
        },
        "nextSteps": {
            "type": "string",
            "value": "[concat('OAUTH2 DEPLOYMENT COMPLETE: 1. Create Azure AD app registration using the configuration in azureAdAppConfiguration output. 2. Store OAUTH2-CLIENT-ID and OAUTH2-CLIENT-SECRET in Key Vault (', parameters('existingKeyVaultName'), '). 3. Grant managed identity (', variables('managedIdentityName'), ') Get/List permissions on Key Vault. 4. Configure Copilot Studio Custom Connector with OAuth2 authentication using the postDeploymentSteps guidance. 5. Test OAuth2 flow with individual user authentication and CIPP role inheritance.')]"
        },
        "deploymentInstructions": {
            "type": "string",
            "value": "To configure automatic deployment: 1. Navigate to your Web App in Azure Portal. 2. Go to Deployment Center. 3. Select GitHub as source. 4. Authenticate and select your forked repository. 5. Choose the main branch. 6. Azure will create a GitHub Actions workflow automatically."
        }
    }
}
