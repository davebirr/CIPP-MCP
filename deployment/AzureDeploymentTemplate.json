{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "baseName": {
            "type": "string",
            "defaultValue": "[concat('cipp-mcp-', uniqueString(resourceGroup().id))]",
            "metadata": {
                "description": "Base name for all resources. Will be used to generate unique resource names."
            }
        },
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "Location for all resources."
            }
        },
        "cippApiUrl": {
            "type": "string",
            "metadata": {
                "description": "URL of your existing CIPP Static Web App (e.g., https://your-cipp.azurestaticapps.net)"
            }
        },
        "cippUserEmail": {
            "type": "string",
            "metadata": {
                "description": "Email address of the CIPP administrator"
            }
        },
        "repositoryUrl": {
            "type": "string",
            "defaultValue": "https://github.com/YourUsername/CIPP-MCP",
            "metadata": {
                "description": "URL of your forked CIPP-MCP repository"
            }
        },
        "repositoryBranch": {
            "type": "string",
            "defaultValue": "main",
            "metadata": {
                "description": "Branch to deploy from"
            }
        }
    },
    "variables": {
        "functionAppName": "[concat(parameters('baseName'), '-func')]",
        "appServicePlanName": "[concat(parameters('baseName'), '-asp')]",
        "storageAccountName": "[concat(replace(parameters('baseName'), '-', ''), 'stor')]",
        "keyVaultName": "[concat(parameters('baseName'), '-kv')]",
        "applicationInsightsName": "[concat(parameters('baseName'), '-ai')]",
        "managedIdentityName": "[concat(parameters('baseName'), '-mi')]"
    },
    "resources": [
        {
            "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
            "apiVersion": "2018-11-30",
            "name": "[variables('managedIdentityName')]",
            "location": "[parameters('location')]"
        },
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2021-02-01",
            "name": "[variables('storageAccountName')]",
            "location": "[parameters('location')]",
            "sku": {
                "name": "Standard_LRS"
            },
            "kind": "StorageV2",
            "properties": {
                "supportsHttpsTrafficOnly": true,
                "allowBlobPublicAccess": false,
                "minimumTlsVersion": "TLS1_2"
            }
        },
        {
            "type": "Microsoft.KeyVault/vaults",
            "apiVersion": "2021-04-01-preview",
            "name": "[variables('keyVaultName')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('managedIdentityName'))]"
            ],
            "properties": {
                "sku": {
                    "family": "A",
                    "name": "standard"
                },
                "tenantId": "[subscription().tenantId]",
                "accessPolicies": [
                    {
                        "tenantId": "[subscription().tenantId]",
                        "objectId": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('managedIdentityName'))).principalId]",
                        "permissions": {
                            "secrets": [
                                "get",
                                "list"
                            ]
                        }
                    }
                ],
                "enabledForDeployment": false,
                "enabledForTemplateDeployment": false,
                "enabledForDiskEncryption": false,
                "enableSoftDelete": true,
                "softDeleteRetentionInDays": 7,
                "enablePurgeProtection": true
            }
        },
        {
            "type": "Microsoft.Insights/components",
            "apiVersion": "2020-02-02",
            "name": "[variables('applicationInsightsName')]",
            "location": "[parameters('location')]",
            "kind": "web",
            "properties": {
                "Application_Type": "web",
                "Request_Source": "rest"
            }
        },
        {
            "type": "Microsoft.Web/serverfarms",
            "apiVersion": "2021-02-01",
            "name": "[variables('appServicePlanName')]",
            "location": "[parameters('location')]",
            "sku": {
                "name": "Y1",
                "tier": "Dynamic"
            },
            "properties": {
                "name": "[variables('appServicePlanName')]",
                "reserved": true
            }
        },
        {
            "type": "Microsoft.Web/sites",
            "apiVersion": "2021-02-01",
            "name": "[variables('functionAppName')]",
            "location": "[parameters('location')]",
            "kind": "functionapp,linux",
            "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]",
                "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]",
                "[resourceId('Microsoft.Insights/components', variables('applicationInsightsName'))]",
                "[resourceId('Microsoft.KeyVault/vaults', variables('keyVaultName'))]",
                "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('managedIdentityName'))]"
            ],
            "identity": {
                "type": "UserAssigned",
                "userAssignedIdentities": {
                    "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('managedIdentityName'))]": {}
                }
            },
            "properties": {
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]",
                "reserved": true,
                "siteConfig": {
                    "linuxFxVersion": "DOTNET-ISOLATED|8.0",
                    "appSettings": [
                        {
                            "name": "AzureWebJobsStorage",
                            "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';EndpointSuffix=', environment().suffixes.storage, ';AccountKey=',listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2021-02-01').keys[0].value)]"
                        },
                        {
                            "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
                            "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';EndpointSuffix=', environment().suffixes.storage, ';AccountKey=',listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2021-02-01').keys[0].value)]"
                        },
                        {
                            "name": "WEBSITE_CONTENTSHARE",
                            "value": "[toLower(variables('functionAppName'))]"
                        },
                        {
                            "name": "FUNCTIONS_EXTENSION_VERSION",
                            "value": "~4"
                        },
                        {
                            "name": "APPLICATIONINSIGHTS_CONNECTION_STRING",
                            "value": "[reference(resourceId('Microsoft.Insights/components', variables('applicationInsightsName'))).ConnectionString]"
                        },
                        {
                            "name": "FUNCTIONS_WORKER_RUNTIME",
                            "value": "dotnet-isolated"
                        },
                        {
                            "name": "AZURE_CLIENT_ID",
                            "value": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('managedIdentityName'))).clientId]"
                        },
                        {
                            "name": "KEY_VAULT_NAME",
                            "value": "[variables('keyVaultName')]"
                        },
                        {
                            "name": "KEY_VAULT_URL",
                            "value": "[reference(resourceId('Microsoft.KeyVault/vaults', variables('keyVaultName'))).vaultUri]"
                        },
                        {
                            "name": "CIPP_API_BASE_URL",
                            "value": "[parameters('cippApiUrl')]"
                        },
                        {
                            "name": "CIPP_SWA_URL",
                            "value": "[parameters('cippApiUrl')]"
                        },
                        {
                            "name": "CIPP_USER_EMAIL",
                            "value": "[parameters('cippUserEmail')]"
                        },
                        {
                            "name": "CIPP_USER_ID",
                            "value": "[parameters('cippUserEmail')]"
                        },
                        {
                            "name": "AUTH_MODE",
                            "value": "keyvault"
                        },
                        {
                            "name": "USE_REAL_AUTH",
                            "value": "true"
                        }
                    ]
                }
            },
            "resources": [
                {
                    "type": "sourcecontrols",
                    "apiVersion": "2021-02-01",
                    "name": "web",
                    "dependsOn": [
                        "[resourceId('Microsoft.Web/sites', variables('functionAppName'))]"
                    ],
                    "properties": {
                        "repoUrl": "[parameters('repositoryUrl')]",
                        "branch": "[parameters('repositoryBranch')]",
                        "isManualIntegration": true
                    }
                }
            ]
        }
    ],
    "outputs": {
        "functionAppName": {
            "type": "string",
            "value": "[variables('functionAppName')]"
        },
        "functionAppUrl": {
            "type": "string",
            "value": "[concat('https://', reference(resourceId('Microsoft.Web/sites', variables('functionAppName'))).defaultHostName)]"
        },
        "keyVaultName": {
            "type": "string",
            "value": "[variables('keyVaultName')]"
        },
        "managedIdentityName": {
            "type": "string",
            "value": "[variables('managedIdentityName')]"
        },
        "storageAccountName": {
            "type": "string",
            "value": "[variables('storageAccountName')]"
        }
    }
}
