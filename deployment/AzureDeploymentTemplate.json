{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "baseName": {
            "type": "string",
            "defaultValue": "[concat('cipp-mcp-', uniqueString(resourceGroup().id))]",
            "metadata": {
                "description": "Base name for MCP resources. Will be used to generate unique resource names."
            }
        },
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "Location for all resources."
            }
        },
        "cippApiUrl": {
            "type": "string",
            "metadata": {
                "description": "URL of your existing CIPP Static Web App (e.g., https://your-cipp.azurestaticapps.net)"
            }
        },
        "cippUserEmail": {
            "type": "string",
            "metadata": {
                "description": "Email address of the CIPP administrator"
            }
        },
        "existingKeyVaultName": {
            "type": "string",
            "metadata": {
                "description": "Name of your existing CIPP Key Vault (from your CIPP deployment)"
            }
        },
        "repositoryUrl": {
            "type": "string",
            "defaultValue": "https://github.com/davebirr/CIPP-MCP",
            "metadata": {
                "description": "URL of your forked CIPP-MCP repository"
            }
        },
        "repositoryBranch": {
            "type": "string",
            "defaultValue": "main",
            "metadata": {
                "description": "Branch to deploy from (used for reference only)"
            }
        }
    },
    "variables": {
        "webAppName": "[concat(parameters('baseName'), '-app')]",
        "appServicePlanName": "[concat(parameters('baseName'), '-asp')]",
        "applicationInsightsName": "[concat(parameters('baseName'), '-ai')]",
        "managedIdentityName": "[concat(parameters('baseName'), '-mi')]"
    },
    "resources": [
        {
            "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
            "apiVersion": "2018-11-30",
            "name": "[variables('managedIdentityName')]",
            "location": "[parameters('location')]"
        },
        {
            "type": "Microsoft.Insights/components",
            "apiVersion": "2020-02-02",
            "name": "[variables('applicationInsightsName')]",
            "location": "[parameters('location')]",
            "kind": "web",
            "properties": {
                "Application_Type": "web",
                "Request_Source": "rest"
            }
        },
        {
            "type": "Microsoft.Web/serverfarms",
            "apiVersion": "2021-02-01",
            "name": "[variables('appServicePlanName')]",
            "location": "[parameters('location')]",
            "sku": {
                "name": "B1",
                "tier": "Basic"
            },
            "properties": {
                "name": "[variables('appServicePlanName')]",
                "reserved": true
            }
        },
        {
            "type": "Microsoft.Web/sites",
            "apiVersion": "2021-02-01",
            "name": "[variables('webAppName')]",
            "location": "[parameters('location')]",
            "kind": "app,linux",
            "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]",
                "[resourceId('Microsoft.Insights/components', variables('applicationInsightsName'))]",
                "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('managedIdentityName'))]"
            ],
            "identity": {
                "type": "UserAssigned",
                "userAssignedIdentities": {
                    "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('managedIdentityName'))]": {}
                }
            },
            "properties": {
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]",
                "reserved": true,
                "siteConfig": {
                    "linuxFxVersion": "DOTNETCORE|9.0",
                    "appSettings": [
                        {
                            "name": "APPLICATIONINSIGHTS_CONNECTION_STRING",
                            "value": "[reference(resourceId('Microsoft.Insights/components', variables('applicationInsightsName'))).ConnectionString]"
                        },
                        {
                            "name": "AZURE_CLIENT_ID",
                            "value": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('managedIdentityName'))).clientId]"
                        },
                        {
                            "name": "KEY_VAULT_NAME",
                            "value": "[parameters('existingKeyVaultName')]"
                        },
                        {
                            "name": "KEY_VAULT_URL",
                            "value": "[concat('https://', parameters('existingKeyVaultName'), '.vault.azure.net/')]"
                        },
                        {
                            "name": "CIPP_API_BASE_URL",
                            "value": "[parameters('cippApiUrl')]"
                        },
                        {
                            "name": "CIPP_SWA_URL",
                            "value": "[parameters('cippApiUrl')]"
                        },
                        {
                            "name": "CIPP_USER_EMAIL",
                            "value": "[parameters('cippUserEmail')]"
                        },
                        {
                            "name": "CIPP_USER_ID",
                            "value": "[parameters('cippUserEmail')]"
                        },
                        {
                            "name": "AUTH_MODE",
                            "value": "keyvault"
                        },
                        {
                            "name": "USE_REAL_AUTH",
                            "value": "true"
                        }
                    ]
                }
            }
        }
    ],
    "outputs": {
        "webAppName": {
            "type": "string",
            "value": "[variables('webAppName')]"
        },
        "webAppUrl": {
            "type": "string",
            "value": "[concat('https://', reference(resourceId('Microsoft.Web/sites', variables('webAppName'))).defaultHostName)]"
        },
        "managedIdentityName": {
            "type": "string",
            "value": "[variables('managedIdentityName')]"
        },
        "managedIdentityClientId": {
            "type": "string",
            "value": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('managedIdentityName'))).clientId]"
        },
        "nextSteps": {
            "type": "string",
            "value": "[concat('NEXT STEPS: 1. Grant managed identity (', variables('managedIdentityName'), ') access to Key Vault (', parameters('existingKeyVaultName'), ') with Get/List permissions. 2. Add CIPP secrets to Key Vault: CIPP-APPLICATION-ID, CIPP-APPLICATION-SECRET, CIPP-REFRESH-TOKEN. 3. Configure CI/CD: Go to Web App > Deployment Center > GitHub > Select your repository and branch.')]"
        },
        "deploymentInstructions": {
            "type": "string",
            "value": "To configure automatic deployment: 1. Navigate to your Web App in Azure Portal. 2. Go to Deployment Center. 3. Select GitHub as source. 4. Authenticate and select your forked repository. 5. Choose the main branch. 6. Azure will create a GitHub Actions workflow automatically."
        }
    }
}
